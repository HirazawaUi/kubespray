---
- name: Check ansible version
  import_playbook: ansible_version.yml

- name: Ensure compatibility with old groups
  import_playbook: legacy_groups.yml

- hosts: bastion[0]
  gather_facts: False
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - { role: bastion-ssh-config, tags: ["localhost", "bastion"], when: kubernetes_deployment_type == 'kubespray'   }

- hosts: k8s_cluster:etcd
  strategy: linear
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  gather_facts: false
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: bootstrap-os, tags: bootstrap-os, when: kubernetes_deployment_type == 'kubespray'  }

- name: Gather facts
  tags: always
  import_playbook: facts.yml

- hosts: k8s_cluster:etcd
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - { role: kubernetes/preinstall, tags: preinstall }
    - { role: "container-engine", tags: "container-engine", when: "deploy_container_engine|default(true) and kubernetes_deployment_type == 'kubespray'"}
    - { role: download, tags: download, when: "not skip_downloads and kubernetes_deployment_type == 'kubespray'"   }

- hosts: etcd
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - role: etcd
      tags: etcd
      vars:
        etcd_cluster_setup: true
        etcd_events_cluster_setup: "{{ etcd_events_cluster_enabled }}"
      when: "not etcd_kubeadm_enabled| default(false) and kubernetes_deployment_type == 'kubespray'"

- hosts: k8s_cluster
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - role: etcd
      tags: etcd
      vars:
        etcd_cluster_setup: false
        etcd_events_cluster_setup: false
      when: "not etcd_kubeadm_enabled| default(false) and kubernetes_deployment_type == 'kubespray'"

- hosts: k8s_cluster
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes/node, tags: node, when: kubernetes_deployment_type == 'kubespray'   }

- hosts: kube_control_plane
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes/control-plane, tags: master, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes/client, tags: client, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/cluster_roles, tags: cluster-roles, when: kubernetes_deployment_type == 'kubespray'   }

- hosts: k8s_cluster
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes/kubeadm, tags: kubeadm, when: kubernetes_deployment_type == 'kubespray'  }
    - { role: kubernetes/node-label, tags: node-label, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: network_plugin, tags: network, when: kubernetes_deployment_type == 'kubespray'   }

- hosts: calico_rr
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: network_plugin/calico/rr, tags: ['network', 'calico_rr'], when: kubernetes_deployment_type == 'kubespray'   }

- hosts: kube_control_plane[0]
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: win_nodes/kubernetes_patch, tags: ["master", "win_nodes"], when: kubernetes_deployment_type == 'kubespray'   }

- hosts: kube_control_plane
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/external_cloud_controller, tags: external-cloud-controller, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/network_plugin, tags: network, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/policy_controller, tags: policy-controller, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/ingress_controller, tags: ingress-controller, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps/external_provisioner, tags: external-provisioner, when: kubernetes_deployment_type == 'kubespray'   }
    - { role: kubernetes-apps, tags: apps, when: kubernetes_deployment_type == 'kubespray'   }

- hosts: k8s_cluster
  gather_facts: False
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env }}"
  roles:
    - { role: kubespray-defaults }
    - { role: kubernetes/preinstall, when: "dns_mode != 'none' and resolvconf_mode == 'host_resolvconf' and kubernetes_deployment_type == 'kubespray'", tags: resolvconf, dns_late: true }
